<?xml version="1.0" encoding="UTF-8"?>
<jmeterTestPlan version="1.2" properties="4.0" jmeter="4.0 r1823414">
  <hashTree>
    <TestFragmentController guiclass="TestFragmentControllerGui" testclass="TestFragmentController" testname="Test Fragment" enabled="false"/>
    <hashTree>
      <IfController guiclass="IfControllerPanel" testclass="IfController" testname="Create Role" enabled="true">
        <stringProp name="TestPlan.comments">
          Given variables (setUpData, role, rolePermission)
          When setUpData contains role
          And role is not null
          And role is not default role [&quot;Administrator&quot;,&quot;Power User&quot;,&quot;Report Author&quot;,&quot;Business Analyst&quot;,&quot;Anonymous&quot;]
          Then delete role if exists
          And create role
          And assign rolePermission to role
        </stringProp>
        <stringProp name="IfController.condition">${__groovy(
		vars.get(&quot;setUpData&quot;) &amp;&amp; vars.get(&quot;role&quot;) != null &amp;&amp;
		vars.get(&quot;setUpData&quot;).toLowerCase().split(&quot;\,&quot;)*.trim().contains(&quot;role&quot;) &amp;&amp;
		![&quot;administrator&quot;\,&quot;power user&quot;\,&quot;report author&quot;\,&quot;business analyst&quot;\,&quot;anonymous&quot;].contains(vars.get(&quot;role&quot;).trim().toLowerCase())
          )}</stringProp>
        <boolProp name="IfController.evaluateAll">false</boolProp>
        <boolProp name="IfController.useExpression">true</boolProp>
      </IfController>
      <hashTree>
        <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTPHeaderManager" enabled="true">
          <collectionProp name="HeaderManager.headers">
            <elementProp name="" elementType="Header">
              <stringProp name="Header.name">Accept</stringProp>
              <stringProp name="Header.value">application/json</stringProp>
            </elementProp>
            <elementProp name="" elementType="Header">
              <stringProp name="Header.name">Content-Type</stringProp>
              <stringProp name="Header.value">application/json</stringProp>
            </elementProp>
          </collectionProp>
          <stringProp name="TestPlan.comments">	Authorization Header,  should be inherited</stringProp>
        </HeaderManager>
        <hashTree/>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="Create Role" enabled="true">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">true</boolProp>
        </TransactionController>
        <hashTree>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Delete Role" enabled="true">
            <stringProp name="IncludeController.includepath">resources/keywords/api/userRoleManagement/userRolesPentahoSecurity/deleteRole.jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <CriticalSectionController guiclass="CriticalSectionControllerGui" testclass="CriticalSectionController" testname="Create Role" enabled="true">
            <stringProp name="CriticalSectionController.lockName">createDeleteRole_lock</stringProp>
          </CriticalSectionController>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="PUT createRole" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value"></stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/pentaho/api/userroledao/createRole?roleName=${role}</stringProp>
              <stringProp name="HTTPSampler.method">PUT</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Verify StatusCode 2XX" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="1519520460">2\d{2}</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message">The response code is not a 2xx code. Actual response code: ${__groovy(prev.getResponseCode())} </stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">1</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
          </hashTree>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Role Assignments" enabled="true">
            <stringProp name="IncludeController.includepath">resources/keywords/api/userRoleManagement/userRolesPentahoSecurity/roleAssignments.jmx</stringProp>
          </IncludeController>
          <hashTree/>
        </hashTree>
      </hashTree>
    </hashTree>
  </hashTree>
</jmeterTestPlan>
